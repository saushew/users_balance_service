// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balance": {
            "get": {
                "description": "Returns the account balance by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User data"
                ],
                "operationId": "balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/deposit": {
            "post": {
                "description": "Adding funds to the user's balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Funds"
                ],
                "operationId": "deposit",
                "parameters": [
                    {
                        "description": "Deposit info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.depositRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "Provides paginated list of user transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User data"
                ],
                "operationId": "transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "desc",
                            "asc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Transaction"
                            }
                        }
                    }
                }
            }
        },
        "/transfer": {
            "post": {
                "description": "Transfers funds from one user to another",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Funds"
                ],
                "operationId": "transfer",
                "parameters": [
                    {
                        "description": "Transfer info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.transferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Transaction"
                            }
                        }
                    }
                }
            }
        },
        "/withdraw": {
            "post": {
                "description": "Withdrawal of funds from the user's balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Funds"
                ],
                "operationId": "withdraw",
                "parameters": [
                    {
                        "description": "Withdrawal info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiserver.withdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiserver.depositRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 99.9
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "apiserver.transferRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 99.9
                },
                "from": {
                    "type": "integer",
                    "example": 1
                },
                "to": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "apiserver.withdrawRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 99.9
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 12.34
                },
                "details": {
                    "type": "string",
                    "example": "some details"
                },
                "timestamp": {
                    "type": "integer",
                    "example": 1643756522
                },
                "tx_id": {
                    "type": "integer",
                    "example": 123
                },
                "type": {
                    "type": "string",
                    "example": "deposit/withdraw"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 100.51
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "User's Balance Service",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
